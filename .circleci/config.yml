version: 2
jobs:
  deploy-dev:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless@latest
            yarn
            sudo apt-get install awscli

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-

      - run:
          name: Deploy dev application
          command: |
            export ACCOUNT_ID=159220020591
            chmod +x scripts/aws-cli-assumerole.sh
            source scripts/aws-cli-assumerole.sh
            sls create_domain --accountId ${ACCOUNT_ID}
            sls deploy --accountId ${ACCOUNT_ID}

  deploy-prod:
    docker:
      - image: circleci/node:8.10

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless@latest
            yarn
            sudo apt-get install awscli

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-

      - run:
          name: Deploy prod application
          command: |
            export ACCOUNT_ID=985566274543
            export SLS_DEBUG=true
            chmod +x scripts/aws-cli-assumerole.sh
            source scripts/aws-cli-assumerole.sh
            sls create_domain --stage prod --stageCert PROD --accountId ${ACCOUNT_ID}
            sls deploy --stage prod --stageCert PROD --accountId ${ACCOUNT_ID}

workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy-dev:
          filters:
            branches:
              only:
                - master
      - prod-approval:
          type: approval
          requires:
            - deploy-dev
          filters:
            branches:
              only:
                - master
      - deploy-prod:
          requires:
            - prod-approval
          filters:
            branches:
              only:
                - master
